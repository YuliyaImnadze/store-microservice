services:
  # todo add migration keycloack db
  postgres:
#    image: postgres:15.1
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: micro_store
    #    healthcheck:
    #      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
    #      interval: 10s
    #      timeout: 5s
    #      start_period: 10s
    #      retries: 5
    networks:
      - microp
      # todo add migration config keycloack
  keycloak:
#    image: quay.io/keycloak/keycloak:18.0.0
    image: quay.io/keycloak/keycloak:latest
    restart: always
    command:
      - "start-dev"
    ports:
      - "9080:9080"
    environment:
      DB_VENDOR: POSTGRES
      KC_DB_SCHEMA: public
      KC_HTTP_PORT: 9080
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloack
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    networks:
      - microp
#      KC_HEALTH_ENABLED: "true"
#      KC_HOSTNAME_ADMIN_URL: http://localhost:8888
#    healthcheck:
#      test:
#        [ "CMD-SHELL", "{ exec 3<>/dev/tcp/postgres/9080 && echo -e \"GET /health/ready HTTP/1.1\nhost: postgres:9080\n\" >&3 && timeout --preserve-status 1 cat <&3 | grep -m 1 -q 'status.*UP'; }" ]
#      interval: 10s
#      timeout: 5s
#      start_period: 60s
#      retries: 5
#    depends_on:
#      - postgres
volumes:
  postgres_data:
networks:
  microp:
    driver: bridge